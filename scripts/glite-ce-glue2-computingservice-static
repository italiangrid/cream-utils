#!/usr/bin/perl -w

#
# glite-ce-glue2-computingservice-static: an information provider for the 
# static part of the ComputingService object, in v 2.0 of the GLUE schema
# It can be installed as a gip provider or, even better, it can be called
# just once to produce a ldif part to be installed in the ldif
# gip directory
#
# Author: Massimo Sgaravatto, but code heavily copied from 
# glite-info-glue2-service, implemented by Stephen Burke
#
# Ref: http://www.ogf.org/documents/GFD.147.pdf
#      http://glue20.web.cern.ch/glue20/
# Copyright (c) Members of the EGEE Collaboration. 2010.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
#     Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

use strict;
use FileHandle;
use POSIX qw(strftime);

#
# Version number for this code
my $version = "1.0";

my $confile;


# Read in the configuration file (first argument)

my %config = (
        SiteId => '',
        ComputingServiceId => '',
        Shares => '',
        ExecutionEnvironments => '',
        NumberOfEndPointType => '2',
	      );



if ($ARGV[0]){
    $confile = $ARGV[0];
    my $fh = new FileHandle $confile
	or die "Error: Can't open configuration file: $ARGV[0]\n";
    foreach (<$fh>){
        if ((! m/^\#/) & (m/=/)){
# For lines containing an = and not starting with #
            m/^(.*?)=\s*(.*)\s*$/;
# Split on the first =, no leading or trailing whitespace in the value
            my $key=$1;
            my $value=$2;
            $key=~s/\s+//g;
            $config{$key}=$value;
	}
    }
}else{
    print STDERR "Usage: glite-ce-glue2-computingservice-static <config-file> \n";
    exit 1;
}



# Get hostname 
my $host = `hostname -f`;
chomp($host);

# This is where we put the object in the DIT
my $bind_dn = "GLUE2GroupID=resource,o=glue";

# Read SiteID from conf file
my $SiteID = $config{SiteId};

# No white space. No "
$SiteID =~ s/\s+//g;
$SiteID =~ s/\"//g;

# Service ID is hostname plus "_org.glite.ce.CREAM"
my $ServiceID = $config{ComputingServiceId};

# No white space. No "
$ServiceID =~ s/\s+//g;
$ServiceID =~ s/\"//g;


# Now start outputting LDIF lines for the ComputingService object.
# Note that once we get here we are committed to printing a
# complete, valid object. Start with the DN ...

print "dn: GLUE2ServiceID=$ServiceID,$bind_dn\n";

# Print the boilerplate objectclass declarations and unique ID

print "objectClass: GLUE2Entity\n";
print "objectClass: GLUE2Service\n";
print "objectClass: GLUE2ComputingService\n";

print "GLUE2ServiceID: $ServiceID\n";
# Creation time and validity are standard attributes for all objects

# Times are mandated to be UTC only
my $TimeNow = strftime("%Y-%m-%dT%H:%M:%SZ", gmtime());
print "GLUE2EntityCreationTime: $TimeNow\n";

# No validity, since this is static info

# Name
print "GLUE2EntityName: Computing Service $ServiceID\n";

# Use OtherInfo to embed some metadata to help with debugging

print "GLUE2EntityOtherInfo: InfoProviderName=glite-ce-glue2-computingservice-static\n";
print "GLUE2EntityOtherInfo: InfoProviderVersion=$version\n";
print "GLUE2EntityOtherInfo: InfoProviderHost=$host\n";


print "GLUE2ServiceCapability: executionmanagement.jobexecution\n";

print "GLUE2ServiceType: org.glite.ce.CREAM\n";

print "GLUE2ServiceQualityLevel: production\n";

# Count number of shares
my $Shares = $config{Shares};
my $ShareCount=  ($Shares  =~ tr/,//) +1;

# Read number of endpoint types from configuration file

my $EndpointCount = $config{NumberOfEndPointType};



# Count number of execution environments
my $EE = $config{ExecutionEnvironments};
my $ResourceCount= ($EE =~ tr/,//) +1;


print "GLUE2ServiceComplexity: endpointType=$EndpointCount, share=$ShareCount, resource=$ResourceCount\n";

# Upward reference to the hosting site (AdminDomain)

print "GLUE2ServiceAdminDomainForeignKey: $SiteID\n";

# print a newline to finish the object
print "\n";

exit 0;

